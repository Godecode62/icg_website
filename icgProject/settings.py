"""
Django settings for icgProject project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from decouple import config
import dj_database_url
import os # Assurez-vous que 'os' est importé

# Définition des chemins du projet
BASE_DIR = Path(__file__).resolve().parent.parent


# Paramètres de développement rapide - ne conviennent pas pour la production
# Voir https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# AVERTISSEMENT DE SÉCURITÉ : gardez la clé secrète utilisée en production secrète !
SECRET_KEY = config('SECRET_KEY')

# AVERTISSEMENT DE SÉCURITÉ : ne pas activer le mode débogage en production !
DEBUG = False

ALLOWED_HOSTS = ["icguinea.com",'www.icguinea.com','icg-6bg2.onrender.com']


# Définition des applications
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'storages',
    'appli'
]

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'icgProject.urls'

# --- Configuration des fichiers statiques-----
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    BASE_DIR / "static",
]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# --- Fin de la configuration des fichiers statiques ---

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR /"templates",],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'icgProject.wsgi.application'


# Base de données
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
DATABASES = {
    'default': dj_database_url.parse(config('DATABASE_URL'))
}

# --- Configuration AWS S3 & Fichiers Médias ---
# Configuration AWS S3
AWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID')  # Doit être défini dans les variables d'environnement de Render
AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY')  # Doit être défini dans les variables d'environnement de Render
AWS_STORAGE_BUCKET_NAME = 'icg-burcket'  # Nom exact du bucket (vérifiez dans AWS S3)
AWS_S3_REGION_NAME = 'eu-north-1'  # Région du bucket
AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'  # URL de base pour les fichiers
AWS_S3_FILE_OVERWRITE = False  # Empêche l'écrasement des fichiers existants
AWS_DEFAULT_ACL = 'public-read'  # Rendre les fichiers accessibles publiquement
AWS_S3_VERIFY = True  # Vérifie le certificat SSL

if DEBUG:
    # Paramètres de développement pour les fichiers médias (stockage local)
    DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'
    MEDIA_URL = '/media/'
    MEDIA_ROOT = BASE_DIR / 'media' # Les fichiers seront stockés dans le dossier 'media' de votre projet
else:
    # Paramètres de production pour les fichiers médias (AWS S3)
    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/media/'
# --- Fin de la configuration AWS S3 & Fichiers Médias ---


# Validation du mot de passe
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalisation
# https://docs.djangoproject.com/en/5.1/topics/i18n/
LANGUAGE_CODE = 'fr-fr'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# Type de champ de clé primaire par défaut
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# --- Paramètres de sécurité ---
# Protection CSRF renforcée
CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_SAMESITE = 'Strict'
CSRF_FAILURE_VIEW = 'appli.views.csrf_failure'

# Configuration des sessions
SESSION_COOKIE_AGE = 3600  # 1 heure
SESSION_SAVE_EVERY_REQUEST = True

# Forcer HTTPS (Render fournit le SSL, mais cette option redirige HTTP -> HTTPS)
SECURE_SSL_REDIRECT = True

# Protège les cookies CSRF et de session (nécessite HTTPS)
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

# Protection contre les attaques XSS/Clickjacking
SECURE_BROWSER_XSS_FILTER = True
X_FRAME_OPTIONS = 'DENY'
# --- Fin des paramètres de sécurité ---