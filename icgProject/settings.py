"""
Django settings for icgProject project.

Generated by 'django-admin startproject' using Django 5.1.7.
"""

from pathlib import Path
from decouple import config
import dj_database_url
import os
from django.core.exceptions import ImproperlyConfigured

# Base directory of the project
BASE_DIR = Path(__file__).resolve().parent.parent

# --- Security settings ---
SECRET_KEY = config('SECRET_KEY')
if not SECRET_KEY or len(SECRET_KEY) < 20:
    raise ImproperlyConfigured('SECRET_KEY not configured or too short in .env')

DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = [
    "icguinea.com",
    'www.icguinea.com',
    'icg-6bg2.onrender.com',
]
# Add localhost and 127.0.0.1 only in DEBUG mode
if DEBUG:
    ALLOWED_HOSTS.extend(['127.0.0.1', 'localhost'])

# Installed applications
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'storages', # Required for S3Boto3Storage
    'appli',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'icgProject.urls'

# Templates configuration
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'icgProject.wsgi.application'

# Database configuration
DATABASES = {
    'default': dj_database_url.parse(
        config('DATABASE_URL'),
        conn_max_age=600,
        conn_health_checks=True
    )
}

# Password validators
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization
LANGUAGE_CODE = 'fr-fr'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# --- Static files (managed by Whitenoise in production) ---
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [BASE_DIR / "static"]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# --- Cloudflare R2 Configuration for media files ---
AWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = 'icg'
CLOUDFLARE_ACCOUNT_ID = '1a9d11fc9d6f55875e100f1e11f03eca'
# R2 Endpoint (uses the Cloudflare Account ID)
AWS_S3_ENDPOINT_URL = f"https://{CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com"
AWS_S3_REGION_NAME = None # R2 does not use traditional AWS regions

# Path prefix for media files within your R2 bucket
AWS_LOCATION = 'media' # Files will be stored in icg/media/

# S3 object parameters (for caching, etc.)
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400', # Cache for 24 hours
    'ContentDisposition': 'inline', # To display images directly in the browser
}
AWS_DEFAULT_ACL = None # Manage permissions via R2 bucket policy
AWS_QUERYSTRING_AUTH = False # Do not add authentication parameters to generated URLs (for public access)
AWS_S3_FILE_OVERWRITE = False # Do not overwrite files with the same name
AWS_S3_MAX_MEMORY_SIZE = 100 * 1024 * 1024  # Max memory size before using a temporary file (100MB)
AWS_S3_VERIFY = True # Verify SSL certificate of the S3 server (keep True)

# Media file storage configuration (conditional on DEBUG)
if DEBUG:
    DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'
    MEDIA_URL = '/media/'
    MEDIA_ROOT = BASE_DIR / 'media'
else:
    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    # MEDIA_URL will be automatically constructed by django-storages
    # It will look like https://<ACCOUNT_ID>.r2.cloudflarestorage.com/icg/media/
    MEDIA_URL = f"{AWS_S3_ENDPOINT_URL}/{AWS_STORAGE_BUCKET_NAME}/{AWS_LOCATION}/"


# Additional security settings
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_SAMESITE = 'Lax' # 'Strict' can cause issues with certain embeds or redirects
SESSION_COOKIE_AGE = 3600 * 24  # 1 day
SESSION_SAVE_EVERY_REQUEST = True
SECURE_SSL_REDIRECT = not DEBUG
CSRF_COOKIE_SECURE = not DEBUG
SESSION_COOKIE_SECURE = not DEBUG
SECURE_BROWSER_XSS_FILTER = True
X_FRAME_OPTIONS = 'DENY'
