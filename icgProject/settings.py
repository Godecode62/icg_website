"""
Django settings for icgProject project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from decouple import config
import dj_database_url
import os
import logging # N'oubliez pas d'importer le module logging

# Configure un logger de base pour voir les messages dans les logs Render
logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO) # Peut être passé à logging.DEBUG pour plus de détails
handler = logging.StreamHandler()
formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
handler.setFormatter(formatter)
logger.addHandler(handler)


# Définition des chemins du projet
BASE_DIR = Path(__file__).resolve().parent.parent


# Paramètres de développement rapide - ne conviennent pas pour la production
# Voir https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# AVERTISSEMENT DE SÉCURITÉ : gardez la clé secrète utilisée en production secrète !
SECRET_KEY = config('SECRET_KEY')

# DEBUG DOIT ÊTRE FAUX EN PRODUCTION !
# La valeur est lue depuis la variable d'environnement 'DEBUG' sur Render.
# Si 'DEBUG' n'est pas définie sur Render, elle sera 'False' par défaut.
DEBUG = config('DEBUG', default=False, cast=bool)
logger.info(f"DEBUG value in settings.py: {DEBUG}") # Pour vérifier la valeur en live

ALLOWED_HOSTS = ["icguinea.com", 'www.icguinea.com', 'icg-6bg2.onrender.com']


# Définition des applications
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'storages', # Assurez-vous que 'storages' est bien installé et listé
    'appli'
]

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'icgProject.urls'

# --- Configuration des fichiers statiques (avec Whitenoise) ---
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    BASE_DIR / "static", # Le dossier 'static' de votre projet
]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# --- Fin de la configuration des fichiers statiques ---


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates", ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'icgProject.wsgi.application'


# Base de données
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
DATABASES = {
    'default': dj_database_url.parse(config('DATABASE_URL'))
}


# --- Configuration AWS S3 & Fichiers Médias (uploads) ---

# Récupération des clés AWS depuis les variables d'environnement
# Assurez-vous qu'elles sont définies sur Render !
AWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY')

AWS_STORAGE_BUCKET_NAME = 'icg-burcket'

AWS_S3_REGION_NAME = 'eu-north-1'

# CORRECTION : Pas de virgule ici, c'est une simple affectation de chaîne
AWS_S3_SIGNATURE_NAME = 's3v4'

# Définir le domaine personnalisé S3 qui sera utilisé dans les URLs MEDIA_URL
# Ce domaine doit correspondre à l'URL de votre bucket S3.
AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.{AWS_S3_REGION_NAME}.amazonaws.com'

# Paramètres supplémentaires pour S3
AWS_S3_FILE_OVERWRITE = False # Ne pas écraser les fichiers avec le même nom par défaut
AWS_DEFAULT_ACL = 'public-read' # Rend les fichiers lisibles publiquement.
                                # Nécessite que les ACLs soient activées sur votre bucket S3.
                                # Si vous ne voulez pas d'ACLs et utilisez des politiques de bucket, mettez None.

# CORRECTION : 'AWS_S3_VERITY' est probablement une faute de frappe, c'est 'AWS_S3_VERIFY'
AWS_S3_VERIFY = True # Vérifie le certificat SSL du serveur S3

# Configuration conditionnelle du stockage des fichiers médias
# En mode DEBUG, utilisez le stockage local (pour le développement)
# En production (DEBUG=False), utilisez S3
if DEBUG:
    DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'
    MEDIA_URL = '/media/'
    MEDIA_ROOT = BASE_DIR / 'media'
    logger.info("Using FileSystemStorage for MEDIA (DEBUG=True).")
else:
    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    # IMPORTANT : MEDIA_URL doit pointer vers votre bucket S3 en production
    MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/media/'
    logger.info(f"Using S3Boto3Storage for MEDIA (DEBUG=False). MEDIA_URL: {MEDIA_URL}")

# --- Fin de la configuration AWS S3 & Fichiers Médias ---


# Validation du mot de passe
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalisation
# https://docs.djangoproject.com/en/5.1/topics/i18n/
LANGUAGE_CODE = 'fr-fr'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# Type de champ de clé primaire par défaut
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# --- Paramètres de sécurité ---
# Protection CSRF renforcée
CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_SAMESITE = 'Strict'
# CSRF_FAILURE_VIEW = 'appli.views.csrf_failure' # Cette ligne est commentée car 'appli.views.csrf_failure' n'est pas fourni.
                                                # Elle est nécessaire si vous avez une vue personnalisée pour les erreurs CSRF.

# Configuration des sessions
SESSION_COOKIE_AGE = 3600  # 1 heure
SESSION_SAVE_EVERY_REQUEST = True

# Forcer HTTPS (Render fournit le SSL, mais cette option redirige HTTP -> HTTPS)
SECURE_SSL_REDIRECT = True

# Protège les cookies CSRF et de session (nécessite HTTPS)
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

# Protection contre les attaques XSS/Clickjacking
SECURE_BROWSER_XSS_FILTER = True
X_FRAME_OPTIONS = 'DENY'
# --- Fin des paramètres de sécurité ---